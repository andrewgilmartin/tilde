#!/usr/bin/perl -w

use strict;
use DateTime;

my $svn_url='svn+ssh://inf4/home/svn/crossref-repository/crossref/branches';

my $stop = DateTime->today();
my $start = $stop->clone()->subtract( days => shift @ARGV || 90 );

my %W = (); # week days
my %D = (); # dates
my %U = (); # users

for ( my $next = $start->clone(); $next->compare($stop) <= 0; $next->add( days => 1) ) {
	my $F = $next->strftime('%Y-%m-%d');
	$D{$F} = {};
	$W{$F} = $next->day_of_week();
}

if ( open( IN, "svn log --revision \{$start\}:\{$stop\} $svn_url |" ) ) {	
	while( <IN> ) {
		if ( /\| (.*?) \| (\d\d\d\d-\d\d-\d\d) / ) {
			my $u = $1;
			my $d = $2;
			if ( defined $D{$d} ) {
				$D{$d} ||= {};
				$D{$d}->{$u} += 1;
				$U{$u} = 1;
			}
		}
	}
	close(IN);
}

my @d = sort keys %D;
my ( $l ) = reverse sort { $a <=> $b } map { length($_); } keys %U; # max user length

for my $u ( sort keys %U ) {
	printf( "%*s %s | ", -$l, $u, $d[0] );
	for my $d ( @d ) {
		print $D{$d}->{$u} ? "*" : "-";
	}
	printf( " | %s\n", $d[$#d] );
}

printf( "%*s %*s | ", -$l, "", length($d[0]), "" );
for my $d ( @d ) {
	print $W{$d} == 1 ? "M" : " ";
}
printf( " |\n" );

# DONE

sub DUMP {
	use Data::Dumper;
	print Dumper(@_);
}

# END
